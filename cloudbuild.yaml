steps:
  # Build the code.
  - name: gcr.io/cloud-builders/gradle@sha256:7e84b7225fe6c43457696639d0fd93e50291ef9262982c08b8d2f14e79ca2862
    id: Build code
    entrypoint: /bin/sh
    args:
      - '-c'
      - |
        gradle test bootJar --stacktrace && \
        mv ./build/libs/*.jar ./build/libs/spring-boot-dab710a2.jar

  # Build the container image.
  - name: gcr.io/cloud-builders/docker@sha256:255467d8ede72b2af188d035ac4629ac6d0c0fe14dbd835f13cacd15da0fa4a1
    id: Build image
    args:
      - 'build'
      - '--build-arg'
      - 'artifact=spring-boot-dab710a2.jar'
      - '--tag'
      - 'gcr.io/$PROJECT_ID/spring-boot:dab710a2'
      - '.'




  # Push the image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    id: Push image
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/spring-boot:dab710a2'

  # Clone the pipeline repository
  - name: 'gcr.io/cloud-builders/gcloud'
    id: Clone pipeline repository
    entrypoint: /bin/sh
    args:
      - '-c'
      - |
        gcloud source repos clone pipeline && \
        cd pipeline && \
        git checkout candidate && \
        git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)')

  # Generate the new manifest
  - name: 'gcr.io/cloud-builders/gcloud'
    id: Generate manifest
    entrypoint: /bin/sh
    args:
      - '-c'
      - |
        cd pipeline
        sed "s/GOOGLE_CLOUD_PROJECT/${PROJECT_ID}/g" kubernetes.yaml.tpl | \
        sed "s/COMMIT_SHA/dab710a2/g" > kubernetes.yaml

  # Push the manifest back to pipeline
  - name: 'gcr.io/cloud-builders/gcloud'
    id: Push manifest
    entrypoint: /bin/sh
    args:
      - '-c'
      - |
        set -x && \
        cd pipeline && \
        git add kubernetes.yaml && \
        git commit -m "Deploying image gcr.io/${PROJECT_ID}/spring-boot:dab710a2
        Built from commit ${COMMIT_SHA} of repository [REPOSITORY_URL]" && \
        git push origin candidate
